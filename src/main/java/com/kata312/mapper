package ru.uxair.flight.util.mapper;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ru.uxair.flight.entity.Destination;
import ru.uxair.flight.entity.dto.DestinationDto;

import java.util.List;
import java.util.stream.Collectors;

@Component
public class DestinationMapper {

    private final ModelMapper modelMapper;

    public DestinationMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }


    public Destination convertToDestination(DestinationDto destinationDto) {
        return modelMapper.map( destinationDto, Destination.class);
    }

    public  DestinationDto convertToDestinationDto( Destination destination) {
        return modelMapper.map(destination, DestinationDto.class);
    }
// convetation  List <Destination> to  List <DestinationDto>
    public <S, T> List <T> mapList(List<S> source, Class<T> targetClass) {
        return source
                .stream()
                .map(element -> modelMapper.map(element, targetClass))
                .collect(Collectors.toList());
    }
}
